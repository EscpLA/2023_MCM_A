/*
* Pc：交叉发生的概率
* Pm：变异发生的概率
* M：种群规模
* G：终止进化的代数
* Tf：进化产生的任何一个个体的适应度函数超过Tf，则可以终止进化过程

* k1, k2, k3, k4: 用来在过程中动态修改Pc和Pm
*/
Algorithm 1: 求解草本、灌木、树木的物种数量
Input: Pc, Pm, M, G, Tf, k1, k2, k3, k4
Output: 

随机生成M个个体，形成一个种群group。每个个体对应一个规划解(x1, x2, x3)
do
{
　　计算种群中每一个体的适应度F(i), 如果其中一个适应度符合优化准则，则输出其作为最优解，算法结束
	for i = 1 to M
		if(F(i)>Tf)
			break;
			输出F(i)
　　初始化空种群newGroup
　　do
　　{
　　　　根据适应度以比例选择算法从种群Pop中选出2个个体
　　　　if ( random ( 0 , 1 ) < Pc )
　　　　{
			根据这两个个体的适应度动态修改Pc
			计算得到fmax,favg，分别表示群体中的最大适应值之和群体的平均适应值
			用f表示两个个体中较大的适应值
			if(f>=fvag)
				Pc = K1*(fmax-f)/(fmax-fvag)
			else
				Pc = k2
			对2个个体按交叉概率Pc执行交叉操作
　　　　}
　　　　if ( random ( 0 , 1 ) < Pm )
　　　　{
			根据该个体的适应度动态修改Pm
			计算得到fmax,favg，分别表示群体中的最大适应值之和群体的平均适应值
			用 f' 该个体的适应度
			if(f'==fvag)
				Pm = K3(fmax-f')/(fmax-f)
			else
				Pm = k4`			
			对1个个体按变异概率Pm执行变异操作
　　　　}
	将新个体加入种群newPop中
	} until ( M个子代被创建 )
	用newGroup取代Group
}until ( 任何染色体得分超过Tf， 或繁殖代数超过G )
